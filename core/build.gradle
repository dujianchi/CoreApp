apply plugin: 'com.android.library'
//apply plugin: 'kotlin-android'

apply plugin: 'com.github.dcendents.android-maven'
group='cn.dujc'

android {
    compileSdkVersion Integer.valueOf("$compile_sdk_version")

    defaultConfig {
        minSdkVersion Integer.valueOf("$mini_sdk_version")
        targetSdkVersion Integer.valueOf("$target_sdk_version")
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compileOnly fileTree(include: ['*.jar'], dir: 'libs')
    compileOnly "com.android.support:appcompat-v7:$support_version"
    compileOnly 'com.google.code.gson:gson:2.8.4'
    compileOnly "com.android.support:recyclerview-v7:$support_version"
    //compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    compileOnly 'com.squareup.okhttp3:okhttp:3.8.0'
    //compileOnly 'pub.devrel:easypermissions:1.0.1'
    compileOnly "com.android.support:support-annotations:$support_version"
}

repositories {
    mavenCentral()
}

//---------------------------------------------

// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}